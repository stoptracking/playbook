" vim: filetype=vifm :
" Sample configuration file for vifm (last updated: 20 July, 2018)
" You can edit this file by hand.
" The " character at the beginning of a line comments out the line.
" Blank lines are ignored.
" The basic format for each item is shown with an example.

" ------------------------------------------------------------------------------

" The time in milliseconds that is waited for a mapped key in case of already typed key sequence is ambiguous.
set timeoutlen=200

" Enable integration with terminal multiplexers
" Note: the command is called screen for historical reasons
" (when tmux wasn't yet supported) and might be changed in future releases, or get an alias
screen

" This option gives additional control over case sensitivity
" p - always ignore case of paths during completion
set caseoptions=p

" Command-line option used to pass a command to 'shell' zsh
" It's used in contexts where command comes from the user
" Enables running it in login mode, which can make shell aliases and functions work
" The solution is to add :!zsh -lc at the beginning of the .zprofile commands
set shellcmdflag=-lc

" Update terminal title
set title

" Command used to edit files in various contexts.  The default is vim.
" If you would like to use another vi clone such as Elvis or Vile
" you will need to change this setting.

" set vicmd=vim
" set vicmd=elvis\ -G\ termcap
" set vicmd=vile
set vicmd=nvim

" This makes vifm perform file operations on its own instead of relying on
" standard utilities like `cp`.  While using `cp` and alike is a more universal
" solution, it's also much slower when processing large amounts of files and
" doesn't support progress measuring.

set syscalls

" Trash Directory
" The default is to move files that are deleted with dd or :d to
" the trash directory.  If you change this you will not be able to move
" files by deleting them and then using p to put the file in the new location.
" I recommend not changing this until you are familiar with vifm.
" This probably shouldn't be an option.

set trash
set trashdir="~/.local/share/Trash/files"

" Remove confirmation for deletion into trash only (dd key combination)
set confirm-=delete

" This is how many directories to store in the directory history.

set history=10000

" Automatically resolve symbolic links on l or Enter.

set followlinks

" With this option turned on you can run partially entered commands with
" unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).

set fastrun

" Natural sort of (version) numbers within text.

set sortnumbers

" Sort files and folders (lowcase and uppercase) together
set sort=+iname,dir

" Maximum number of changes that can be undone.

set undolevels=1000

" If you installed the vim.txt help file set vimhelp.
" If would rather use a plain text help file set novimhelp.

set vimhelp

" If you would like to run an executable file when you
" press return on the file name set this.

set norunexec

" Use KiB, MiB, ... instead of KB, MB, ...

set noiec

" Selected color scheme

colorscheme molokai

" Format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.

set timefmt=%d/%m/%y\ %H:%M

" Show list of matches on tab completion in command-line mode

set wildmenu

" Display completions in a form of popup with descriptions of the matches

set wildstyle=popup

" Display suggestions in normal, visual and view modes for keys, marks and
" registers (at most 5 files).  In other view, when available.

" Don't show keys by default, use specific mappings and commands to check them
set suggestoptions=normal,visual,view,otherpane,marks,registers

" Ignore case in search patterns unless it contains at least one uppercase
" letter

set ignorecase
set smartcase

" Don't highlight search results automatically

set nohlsearch

" Use increment searching (search while typing)
set incsearch

" Try to leave some space from cursor to upper/lower border in lists

set scrolloff=4

" Don't do too many requests to slow file systems

if !has('win')
    set slowfs=curlftpfs
endif

" hide side borders
set tuioptions-=s
set tuioptions+=u

" Show hidden files by default
set dotfiles

" Hide .. directory everywhere
set dotdirs=

" Custom ruler format (add filtered files)
set rulerformat='%2l/%S%[ - %x filtered%]'

" Ignore .git directory on :find
" set findprg='find %s -iname *%A* -print ,
"              \ -type d \( ! -readable -o ! -executable -o -path "*/.git" -o -path "*/node_modules" \)
"              \ -prune'
set findprg='fd %A --hidden --no-ignore --exclude .git --exclude node_modules'

" Devicons
" vim insert mode ctrl+V u eNumber esc ; eNumber from https://github.com/ryanoasis/nerd-fonts#glyph-sets
set classify='ﱮ  :dir:/'
set classify+='  ::../::'
set classify+='  :exe:'
set classify+='  :link:'
set classify+='  ::package.json,,Cargo.toml,,shard.yml::'
set classify+='  :reg:'
set classify+='  ::Dockerfile,,docker-compose*.yml::'
set classify+='  ::/^copying|license$/::'
set classify+='  ::*.[hc]::'
set classify+='  ::*.[hc]pp::'
set classify+='  ::*.cr::'
set classify+='  ::*.epub,,*.fb2,,*.djvu::'
set classify+='  ::*.ex,,*.exs::'
set classify+='  ::\.git,,*.git,,.gitignore,,.gitmodules::'
set classify+='  ::*.go::'
set classify+='  ::*.htm,,*.html,,**.[sx]html,,*.xml::'
set classify+='  ::*.java::'
set classify+='  ::*.jl::'
set classify+='  ::*.js::'
set classify+='  ::*.json::'
set classify+='ﰆ  ::*.jsx,,*.tsx::'
set classify+='  ::*.lock::'
set classify+='  ::*.md::'
set classify+='  ::*.php::'
set classify+='  ::*.pdf,,*.ps::'
set classify+='  ::*.pl::'
set classify+='  ::*.py::'
set classify+='ﳒ  ::*.R,,*.r,,*.[Rr]md,,.[Rr][Dd]ata,,*.[Rr]ds,,.Rhistory::'
set classify+='  ::*.rb::'
set classify+='  ::*.rs::'
set classify+='  ::*.S,,*.s::'
set classify+='  ::*.sh,,*.bash,,*.zsh,,.zshrc,,.zshenv,,.bashrc::'
set classify+='  ::*tar::'
set classify+='  ::*.tex::'
set classify+='  ::*.ts::'
set classify+='  ::*.vim,,.vimrc,,.viminfo,,*.swo,,*.swp::'
set classify+='  ::*.mp3,,*.ogg,,*.oga,,*.mogg,,*.flac,,*.opus::'
set classify+='  ::*.odt,,*.doc,,*.docx::'
set classify+='  ::*.ods,,*.xls,,*.xls[mx]::'
set classify+='  ::*.odp,,*.pptx,,*.ppt::'
set classify+='  ::*.7z,,*.ace,,*.arj,,*.bz2,,*.cpio,,*.deb,,*.dz,,*.gz,,*.jar,,*.lzh,,*.lzma,,*.rar,,*.rpm,,*.rz,,*.tar,,*.taz,,*.tb2,,*.tbz,,*.tbz2,,*.tgz,,*.tlz,,*.trz,,*.txz,,*.tz,,*.tz2,,*.xz,,*.z,,*.zip,,*.zoo::'
set classify+='  ::*.bmp,,*.gif,,*.jpeg,,*.jpg,,*.ico,,*.png,,*.ppm,,*.svg,,*.svgz,,*.tga,,*.tif,,*.tiff,,*.xbm,,*.xcf,,*.xpm,,*.xspf,,*.xwd::'
set classify+='  ::*.avi,,*.ts,,*.axv,,*.divx,,*.m2v,,*.m4p,,*.m4v,,.mka,,*.mkv,,*.mov,,*.mp4,,*.flv,,*.mp4v,,*.mpeg,,*.mpg,,*.nuv,,*.ogv,,*.pbm,,*.pgm,,*.qt,,*.vob,,*.wmv,,*.xvid::'
set classify+='  ::Dropbox/::'
set classify+='  ::.git/::'
set classify+='  ::node_modules/::'

" Set custom status line look

set statusline="%1*%* %2*%t%=%* %3*%* %2*%A%* %3*%* %2*%u:%g%* %3*%* %2*%E%* %3*%* %2*%a free%* %3*%*  %2*%d%* %1*%*"

" ------------------------------------------------------------------------------

" :mark mark /full/directory/path [filename]

mark b ~/.bin/
mark d ~/.dotfiles
mark D ~/Dropbox
mark f ~/forks
mark h ~
mark p ~/Projects
mark r /
mark t /tmp

" ------------------------------------------------------------------------------
" :au[tocmd] {event} {pat} {cmd}
" Calculate recursively all folder sizes automatically

" Don't inspect the size of folders which contain /fuse/ in their paths
" vifm mount them inside one
" fuse filesystems are very slow and could hang the remote connection
" autocmd DirEnter * if system("grep -iP 'fuse|mnt|media' <<<" . expand("%d")) == "" | %select | exe 'normal ga' | %unselect | endif

" ------------------------------------------------------------------------------

" :com[mand][!] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

" mount sshfs folder. First generate tmp file with the ssh conection,
" open that file and the remote folder will be mounted and finally remove the
" file
" rsync command specially useful for partial copies
command! rsync rsync --archive --compress --info=progress2 --human-readable --update --delete %f %D %s
" cp command always recursive, preserving all attributes and only updating old files
command! cp cp -avu %f %D %s
" Show file system disk space usage with ncdu
command! ncdu ncdu %d %s
" Show report file system disk space usage
command! df df -h %m 2> /dev/null
" Show the size of the selected element
command! du du -sh %f %m
" diff with vim
command! diff nvim -d %f %F
" diff with meld
command! meld meld %f %F &
" Get Dropbox urls in the clipboard
command! dropboxUrls dropbox-urls-extractor.sh %f
" Create symbolic link
command! link ln -s %f:p %D
" md5
command! mdfive md5sum %f %F %m
cabbrev md5 mdfive
" sha1sum
command! shaone sha1sum %f %F %m
cabbrev sha1 shaone
" sha256sum
command! shatwofivesix sha256sum %f %F %m
cabbrev sha256 shatwofivesix
" zip selected files/folders
command! zip zip -r %f.zip %f
" zip selected zipped files
" command! unzip unzip %f %s
" untar selected archived files
" command! untar tar xf %f %s
" tar selected files
" command! tar tar cvaf %a %f %s
" use e() zsh function for extracting any compressed file or folder
command! extract :!zsh -ic "e %f" %s
" use c() zsh function for compressing any file or folder
command! compress :!zsh -ic "c %a" %s
" Repeat last command to the selected files/folders
command! run !! ./%f
" Run make command
command! make !!make %a
" Create and change to the folder
command! mc :mkdir! '%a' | cd '%a'
command! md :mkdir! '%a'
command! mdm :mkdir! %a
command! sudo :!sudo vifm %d %D
command! vgrep nvim "+grep %a"
" Reload vifmrc  file
command! reload :write | restart

" Find with fd
command! fd fd --hidden --no-ignore --exclude .git --exclude node_modules %a %M

" zoxide, faster way to navigate
command! zoxide :execute 'cd "'.system('zoxide query %a').'"'

" Find with FZF and fd
command! FZF :set noquickview | :execute 'goto "'.system('fd --hidden --no-ignore --exclude .git --exclude node_modules | fzf --preview "exa --all --sort .name --tree --level 1 --classify --git --long --color=always {}" --preview-window wrap 2>/dev/tty ').'"%IU' | redraw

" ------------------------------------------------------------------------------

" The file type is for the default programs to be used with
" a file extension.
" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
" The other programs for the file type can be accessed with the :file command
" The command macros %f, %F, %d, %F may be used in the commands.
" The %a macro is ignored.  To use a % you must put %%.

" For automated FUSE mounts, you must register an extension with :file[x]type
" in one of following formats:
"
" :filetype extensions FUSE_MOUNT|some_mount_command using %SOURCE_FILE and %DESTINATION_DIR variables
" %SOURCE_FILE and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.zip,*.jar,*.war,*.ear FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR
"
" :filetype extensions FUSE_MOUNT2|some_mount_command using %PARAM and %DESTINATION_DIR variables
" %PARAM and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR
" %PARAM value is filled from the first line of file (whole line).
" Example first line for SshMount filetype: root@127.0.0.1:/
"
" You can also add %CLEAR if you want to clear screen before running FUSE
" program.

" Default viewer
fileviewer *[^/] env -uCOLORTERM bat --theme 'base16' --color always --wrap never --pager never %c --number

" Pdf
filextype *.pdf zathura %f %i &
fileviewer *.pdf pdftotext -nopgbrk %c -

" PostScript
filextype *.ps,*.eps,*.ps.gz
        \ {View in zathura}
        \ zathura %f %i &,

" Djvu
filextype *.djvu
        \ {View in zathura}
        \ zathura %f,
        \ {View in apvlv}
        \ apvlv %f,

" Audio
filetype *.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus
       \ cmus %f,
fileviewer *.mp3 cmus

" Video
filextype *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
         \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
         \*.as[fx]
        \ {View using mpv}
        \ mpv %f,
fileviewer *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
          \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
          \*.as[fx]
         \ ffprobe -pretty %c 2>&1

" Web
filextype *.html,*.htm
        \ {Open with firefox}
        \ firefox %f &
filetype *.html,*.htm links, lynx

" Object
filetype *.o nm %f | less

" Man page
filetype *.[1-8] man ./%c
fileviewer *.[1-8] man ./%c | col -b

" Images
filextype *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
        \ {View in vimiv}
        \ vimiv %f &
fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
         \ convert -identify %f -verbose /dev/null

" MD5
filetype *.md5
       \ {Check MD5 hash sum}
       \ md5sum -c %f %S,

" SHA1
filetype *.sha1
       \ {Check SHA1 hash sum}
       \ sha1sum -c %f %S,

" SHA256
filetype *.sha256
       \ {Check SHA256 hash sum}
       \ sha256sum -c %f %S,

" SHA512
filetype *.sha512
       \ {Check SHA512 hash sum}
       \ sha512sum -c %f %S,

" GPG signature
filetype *.asc
       \ {Check signature}
       \ !!gpg --verify %c,

" Torrent
filextype *.torrent transmission-gtk %f &
filetype *.torrent transmission-cli %f &
fileviewer *.torrent transmission-show -s  %c

" ArchiveMount
filetype .*.tar,*.tar,*.tar.bz2,*.tbz2,*.tgz,.*.tar.gz,*.tar.gz,.*.tar.xz,*.tar.xz,*.txz
       \ {Mount with archivemount}
       \ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,

fileviewer .*.tar.gz,*.tar.gz,*.tgz tar -tzf %c
fileviewer *.tar.bz2,*.tbz2 tar -tjf %c
fileviewer .*.tar.xz,*.tar.xz,*.tar.txz,*.txz xz --list %c
fileviewer .*.tar,*.tar tar -tf %c

" filextype *.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz
"         \ {Open with xarchive}
"         \ xarchiver %f &

" FuseZipMount
filetype *.zip,*.jar,*.war,*.ear,*.oxt,*.apkg
       \ {Mount with fuse-zip}
       \ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
       \ {View contents}
       \ zip --show-files %c | less,
       \ {Extract here}
       \ tar -xf %c,
fileviewer *.zip,*.jar,*.war,*.ear,*.oxt zip --show-files %c

" Rar2FsMount and rar archives
filetype *.rar
       \ {Mount with rar2fs}
       \ FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.rar unrar v %c

" IsoMount
filetype *.iso
       \ {Mount with fuseiso}
       \ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,

" SshMount
filetype *.sshfs FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR %FOREGROUND
command! sshfs
        \ : let $SSH_FILE = system('mktemp /tmp/XXXX.sshfs')
        \ | execute '!echo ''-o allow_other,default_permissions,follow_symlinks,kernel_cache,reconnect,ServerAliveInterval=60,ServerAliveCountMax=3 %a'' > $SSH_FILE; ls $SSH_FILE %%U'
        \ | execute 'normal l'
        \ | execute '!rm $SSH_FILE'

" FtpMount
filetype *.ftp
       \ {Mount with curlftpfs}
       \ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR %FOREGROUND,

" Fuse7z and 7z archives
filetype *.7z
       \ {Mount with fuse-7z}
       \ FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.7z 7z l %c

" Office files
filextype *.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx libreoffice %f &
fileviewer *.doc catdoc %c
fileviewer *.docx docx2txt.pl %f -

" Directories
filextype */
        \ {View in pcmanfm}
        \ pcmanfm %f &,

" Syntax highlighting in preview
"
" Explicitly set highlight type for some extensions
"
" 256-color terminal
" fileviewer *.[ch],*.[ch]pp highlight -O xterm256 -s dante --syntax c %c
" fileviewer Makefile,Makefile.* highlight -O xterm256 -s dante --syntax make %c
"
" 16-color terminal
" fileviewer *.c,*.h highlight -O ansi -s dante %c
"
" Or leave it for automatic detection
"
" fileviewer *[^/] pygmentize -O style=monokai -f console256 -g

" Displaying pictures in terminal
"
" fileviewer *.jpg,*.png shellpic %c

" Open all other files with default system programs (you can also remove all
" :file[x]type commands above to ensure they don't interfere with system-wide
" settings).  By default all unknown files are opened with 'vi[x]cmd'
" uncommenting one of lines below will result in ignoring 'vi[x]cmd' option
" for unknown file types.
" For *nix:
" filetype * xdg-open
" For OS X:
" filetype * open
" For Windows:
" filetype * start, explorer

" ------------------------------------------------------------------------------

" What should be saved automatically between vifm sessions.  Drop "savedirs"
" value if you don't want vifm to remember last visited directories for you.
" set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,
"     \phistory,fhistory,dirstack,registers,bookmarks,bmarks
set vifminfo=dhistory,chistory,tui,shistory,
    \phistory,fhistory,dirstack,registers
" ------------------------------------------------------------------------------

" Examples of configuring both panels

" Set numbers
windo set number
" Set relative numbers
windo set relativenumber

" Customize view columns a bit (enable ellipsis for truncated file names)
" windo set viewcolumns=-{name}..,6{}.
windo set viewcolumns=-{name},6{size},11{perms},9{uname},-8{gname},16{mtime}
" Recover full viewcolumns after leave only one pane
nnoremap <c-w>o :only | :windo set viewcolumns=-{name},6{size},11{perms},9{uname},-8{gname},16{mtime}<cr>
" Recover short viewcolumns after leave only one pane
nnoremap <c-w>O :only | :windo set viewcolumns=-{name},6{size},11{perms},15{mtime}<cr>
" Default viewcolumns with horizontal split
nnoremap <c-w>s :split | :windo set viewcolumns=-{name},6{size},11{perms},9{uname},-8{gname},16{mtime}<cr>
" Default viewcolumns with horizontal split in small window
nnoremap <c-w>S :split | :windo set viewcolumns=-{name},6{size},11{perms},15{mtime}<cr>
" Default viewcolumns with vertical split
nnoremap <c-w>v :vsplit | :windo set viewcolumns=-{name},6{size},11{perms},15{mtime}<cr>

" Filter-out build and temporary files
"
" filter! /^.*\.(lo|o|d|class|py[co])$|.*~$/

" ------------------------------------------------------------------------------

" Mappings

" List all maps in normal mode
nnoremap <silent> ;nm :nmap<cr>
nnoremap <silent> ;m :nmap<cr>
" List all maps in command line mode
nnoremap <silent> ;cm :cmap<cr>
cnoremap <silent> ;m :cmap<cr>
" List all maps in menu mode
nnoremap <silent> ;mm :mmap<cr>
mnoremap <silent> ;m :mmap<cr>
" List all maps in view mode
nnoremap <silent> ;qm :qmap<cr>
qnoremap <silent> ;m :qmap<cr>
" List all maps in visual mode
nnoremap <silent> ;vm :vmap<cr>
vnoremap <silent> ;m :vmap<cr>
" List all user commands
nnoremap <silent> ;co :command<cr>

" Type commands faster
nnoremap , :
vnoremap , :

" Start shell in current directory
nnoremap <silent> sh :shell<cr>

" Open console in current directory
nnoremap ,t :!alacritty &<cr>

" Display sorting dialog
nnoremap <silent> S :sort<cr>
" Sort mappings
nnoremap <silent> ,sn :set sort=+iname,dir<cr>
nnoremap <silent> ,sN :set sort=-iname,dir<cr>
nnoremap <silent> ,st :set sort=-mtime,dir<cr>
nnoremap <silent> ,sT :set sort=+mtime,dir<cr>
nnoremap <silent> ,ss :set sort=-size,dir<cr>
nnoremap <silent> ,sS :set sort=+size,dir<cr>

" Toggle visibility of preview window
nnoremap <silent> w :view<cr>
vnoremap <silent> w :view<cr>gv

" mkdir -p directory
nnoremap md :md<space>
nnoremap ;md :mdm<space>
" mkdir && cd to the directory
nnoremap mc :mc<space>
" Touch file
nnoremap to :touch<space>
" Set the same directory in the other panel
nnoremap sy :sync<cr>
" Repeat name substitution
nnoremap su :su<cr>
" Reload config
nnoremap <silent> rl :reload<cr>

" Open file in existing instance of gvim
"nnoremap o :!gvim --remote-tab-silent %f<cr>
" Open file always in TUI vim
" nnoremap o :!nvim %f<cr>
" Use special open function defined in .zprofile
nnoremap o :!zsh -lc "open %f"<cr>
" Open file in new instance of gvim
"nnoremap O :!gvim %f<cr>
" Select program to open the file
nnoremap O :file <space><tab>

" Force file editing
nnoremap i :edit<cr>

" Open with vscode
nnoremap co :!code %f &<cr>

" Open file in the background using its default program
" nnoremap gb :file &<cr>l

" Yank current directory path into the clipboard
nnoremap yd :!echo %d | sed "/ /s/^/'/;/ /s/$/'/" | xclip -in -selection clipboard -rmlastnl %i<cr>

" Yank current file path into the clipboard
nnoremap yp :!echo %f:p | sed "/ /s/^/'/;/ /s/$/'/" | xclip -in -selection clipboard -rmlastnl %i<cr>

" Yank current file without path into the clipboard
nnoremap yn :!echo %f | sed "/ /s/^/'/;/ /s/$/'/" | xclip -in -selection clipboard -rmlastnl %i<cr>

" Yank current file path ready to be used by a GUI file manager picker used by web browsers
nnoremap yw :!echo file://%c:p | xclip -in -selection clipboard -rmlastnl %i<cr>

" Yank current file path ready to be used by a GUI file manager
nnoremap yf :!echo %f:p | xclip -in -selection clipboard -rmlastnl -t text/uri-list<cr>

" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cw

" Mappings for select/unselect
nnoremap t tj
nnoremap T tk

" Mappings for tabs
nnoremap ;t :tabnew<cr>
nnoremap ;tn :tabname<space>

" Mapping for visual selection of all files
nnoremap vv :%select<cr>

" sshfs mapping
nnoremap ssh :sshfs<space>:<left>

" select mapping (apply select)
nnoremap s :select<space>//<left>

" filter mapping (apply filter)
nnoremap ,f :filter<space>//<left>

" Substitute mapping
nnoremap <silent> r :substitute///<left><left>

" rsync mapping
nnoremap rs :rsync<cr>

" rg mapping
nnoremap <silent> ;s :grep<space>

" find mapping
nnoremap <silent> ;f :find<space>

" diff mapping
nnoremap di :diff<cr>

" meld mapping
nnoremap me :meld<cr>

" ncdu mapping
nnoremap nc :ncdu<cr>

" df mapping
nnoremap df :df<cr>

" du mapping
nnoremap du :du<cr>

" cd mapping
nnoremap cd :cd<space>

" zoxide mapping
nnoremap <silent> <a-x> :zoxide<space>

" FZF mapping
nnoremap <silent> <a-c> :FZF<cr>

" Open vim to edit vifmrc and apply settings after returning to vifm
nnoremap <silent> ;c :write | execute ':!vim $MYVIFMRC' | restart<cr>

" Toggle wrap setting on ,w key
nnoremap <silent> ;w :set wrap!<cr>

" extract file mapping
nnoremap <silent> ;e :extract<cr>
" compress file mapping
nnoremap <silent> ;c :compress <c-x>c<space>

" Use < and > without ctrl-w prefix key in normal mode
nnoremap < <c-w><
nnoremap > <c-w>>

" Moving cursor in another pane
nnoremap <silent> J <space>j<space>
nnoremap <silent> K <space>k<space>

" Use tab as s-tab to change to quick view mode
nnoremap <tab> <s-tab>

" Go to next tab page or move current tab page to position specified by the
" count
nnoremap <silent> gt : <c-u>
                    \| if v:count == 0
                    \|     execute 'normal gt'
                    \| elseif v:count > tabpagenr('$')
                    \|     tabmove
                    \| elseif v:count >= tabpagenr()
                    \|     execute 'tabmove' v:count
                    \| elseif v:count < tabpagenr()
                    \|     execute 'tabmove' v:count - 1
                    \| endif
                    \| <cr>

" Switch to the next tab page
nnoremap <c-n> gt
" Switch to the previous tab page
nnoremap <c-p> gT

nnoremap ;1 1gt
nnoremap ;2 2gt
nnoremap ;3 3gt
nnoremap ;4 4gt
nnoremap ;5 5gt
nnoremap ;6 6gt
nnoremap ;7 7gt
nnoremap ;8 8gt
nnoremap ;9 9gt
nnoremap ;0 10gt

" Example of standard two-panel file managers mappings
nnoremap <f3> :!less %f<cr>
nnoremap <f4> :edit<cr>
nnoremap <f5> :copy<cr>
nnoremap <f6> :move<cr>
nnoremap <f7> :mkdir<space>
nnoremap <f8> :delete<cr>

" ------------------------------------------------------------------------------

" Various customization examples

" Use ag (the silver searcher) instead of grep
" set grepprg=ag\ --line-numbers\ %i\ %a\ %s
" Use rg (ripgrep) instead of grep
set grepprg='rg --glob "!{.git,.thunderbird,node_modules}" --vimgrep --smart-case --hidden --no-ignore --no-heading --with-filename --no-ignore-parent --line-number %i %a %s'

" Add additional place to look for executables
"
" let $PATH = $HOME.'/bin/fuse:'.$PATH

" Block particular shortcut
"
" nnoremap <left> <nop>

" Export IPC name of current instance as environment variable and use it to
" communicate with the instance later.
"
" It can be used in some shell script that gets run from inside vifm, for
" example, like this:
"     vifm --server-name "$VIFM_SERVER_NAME" --remote +"cd '$PWD'"
"
" let $VIFM_SERVER_NAME = v:servername
