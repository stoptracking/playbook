---
- name: Create nVim init folder
  file:
    path: "{{ ansible_env.HOME }}/.config/nvim"
    state: directory
    mode: 0755

- name: Create auxiliary vim folders
  file:
    path: "{{ ansible_env.HOME }}/.vim/{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - backup
    - tmp
    - undo

- name: Create NeoVim init file
  copy:
    content: "set runtimepath^=~/.vim runtimepath+=~/.vim/after\n
              let &packpath = &runtimepath\n
              source ~/.vimrc\n"
    dest: "{{ ansible_env.HOME }}/.config/nvim/init.vim"

- name: Copy colour-schemes
  copy:
    src: vim/colors
    dest: "{{ ansible_env.HOME }}/.vim"
  when: copy_dotfiles and not link_to_localhost

- name: Link colour-schemes
  file:
    src: "{{ playbook_dir }}/roles/dotfiles/files/vim/colors"
    dest: "{{ ansible_env.HOME }}/.vim/colors"
    state: link
    force: yes
  when: link_to_localhost and not WSL1 and not copy_dotfiles

#
# Use vim-plug
#
- block:

  - name: Create autoload directory
    file:
      path: "{{ ansible_env.HOME }}/.local/share/nvim/site/autoload"
      state: directory
      mode: 0755

  - name: Copy vim-plug
    copy:
      src: vim/vim-plug/plug.vim
      dest: "{{ ansible_env.HOME }}/.local/share/nvim/site/autoload/plug.vim"
    when: copy_dotfiles and not link_to_localhost

  - name: Link vim-plug
    file:
      src: "{{ playbook_dir }}/roles/dotfiles/files/vim/vim-plug/plug.vim"
      dest: "{{ ansible_env.HOME }}/.local/share/nvim/site/autoload/plug.vim"
      state: link
      force: yes
    when: link_to_localhost and not WSL1 and not copy_dotfiles

  - name: Install nVIM plugins and exit
    shell: nvim +PlugUpdate +sleep1000m +exit +sleep1000m +exit
    async: 45
    poll: 5
    changed_when: false

  - name: Make `preview.sh` executable
    file:
      path: "{{ ansible_env.HOME }}/.vim/plugged/fzf.vim/bin/preview.sh"
      mode: a+x


  when: use_vim_plug
