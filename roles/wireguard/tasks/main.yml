---
- name: Run sanity-checks
  import_tasks: assertions.yml
  become: yes
  tags:
    - wg_assert

- name: Install wireguard
  apt:
    name: ['wireguard', 'wireguard-tools']
    state: present
  tags:
    - wg_install

# If private key is not provided -- generate a pair on the target host
- block:

  - name: Create private/public keypair
    shell:
      chdir: /etc/wireguard
      cmd: umask 077 & wg genkey | tee privatekey | wg pubkey > publickey

  - name: Register private key
    slurp:
      src: "/etc/wireguard/privatekey"
    register: wg_privkey
  - set_fact:
      wg_privkey: "{{ wg_privkey.content | b64decode }}"

  - name: Register public key
    slurp:
      src: "/etc/wireguard/publickey"
    register: wg_pubkey
  - set_fact:
      wg_pubkey: "{{ wg_pubkey.content | b64decode }}"

  - name: Verify that both keys are of expected length
    set_fact:
      wg_keys_valid: true
    when: wg_pubkey | length == 45 and wg_privkey | length == 45

- name: Generate a pair of public/private keys
  import_tasks: genkeys.yml
  become: yes
  when: not wg_peerkey
  tags:
    - wg_genkeys

- name: Generate config file
  import_tasks: genconfig.yml
  become: yes
  tags:
    - wg_genconfig

- name: Amend UFW ruleset
  import_tasks: ufw.yml
  become: yes
  notify: 'reload ufw'
  tags:
    - wg_ufw

- name: Enable routing in sysctl
  lineinfile:
    path: /etc/sysctl.conf
    line: "net.ipv4.ip_forward=1"
    state: present
  when: wg_forward
  notify: 'reload sysctl'
  tags:
    - wg_sysctl_routing

- name: Enable Wireguard systemd service and make sure it's stopped
  systemd:
    name: "wg-quick@{{ wg_iface }}.service"
    enabled: yes
    masked: no
    state: stopped
  when: wg_autostart
  notify:
    - 'reread systemd'
    - 'reload systemd'
  tags:
    - wg_systemd

- meta: flush_handlers

- name: Start Wireguard daemon
  systemd:
    name: "wg-quick@{{ wg_iface }}.service"
    state: started
    enabled: yes
  when: wg_start
  tags:
    - wg_systemd
