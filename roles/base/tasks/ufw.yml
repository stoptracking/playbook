---
- name: Ensure UFW is installed
  apt:
    name: ufw
    state: present

- name: Disable ipv6
  lineinfile:
    path: /etc/ufw/ufw.conf
    line: "IPV6=no"
    insertafter: EOF

- name: Don't autoconfigure ipv6
  # Note: single-quoted for a reason
  replace:
    path: /etc/ufw/sysctl.conf
    regexp: '^#(net\/ipv6\/conf\/\w*\/autoconf\=0)'
    replace: '\1'

- name: Limit SSH connections
  ufw:
    rule: limit
    port: ssh
    proto: tcp
    comment: Limit SSH via Ansible
  when: allow_ssh

- name: Disable logging in config
  lineinfile:
    path: /etc/ufw/ufw.conf
    regexp: '^LOGLEVEL'
    line: "LOGLEVEL=off"

- name: Add UFW rules
  ufw:
    comment: "{{ item.comment | default(omit) }}"
    direction: "{{ item.direction | default('in') }}"   # in/out/router
    from_ip: "{{ item.from | default('any') }}"         # defaults to "any"
    port: "{{ item.port | default('any') }}"            # destination port
    proto: "{{ item.proto | default('any') }}"
    rule: "{{ item.rule }}"                             # allow/deny/limit/reject
    to_ip: "{{ item.to | default('any') }}"             # defaults to "any"
  with_items: "{{ ufw_rule }}"
  when: ufw_rule | length > 0

- name: Add UFW service
  ufw:
    comment: "{{ item.comment | default(omit) }}"
    from_ip: "{{ item.from | default('any') }}"         # defaults to "any"
    rule: "{{ item.rule }}"                             # allow/deny/limit/reject
    to_ip: "{{ item.to | default('any') }}"             # defaults to "any"
    name: "{{ item.service }}"                          # /etc/ufw/applications.d
  with_items: "{{ ufw_service }}"
  when: ufw_service | length > 0

- name: Enable UFW
  ufw:
    state: enabled
    policy: deny
    direction: incoming
    logging: 'off'

- name: Ensure UFW is up and running
  service:
    name: ufw
    state: restarted
  changed_when: False
