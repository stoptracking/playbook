---
- name: Run sanity-checks
  import_tasks: assertions.yml
  become: yes
  tags:
    - base_assert

- name: Register CPU details
  import_tasks: cpu.yml
  become: yes
  tags:
    - base_cpu

- name: Set dpkg overrides
  import_tasks: dpkg_overrides.yml
  become: yes
  tags:
    - base_dpkg_overrides

- name: Boostrap vital settings
  import_tasks: bootstrap.yml
  become: yes
  tags:
    - base_bootstrap

- name: Remove unwanted packages
  import_tasks: packages_remove.yml
  become: yes
  tags:
    - base_pkg_unwanted

- name: Prepare repositories
  import_tasks: packages_setup_repos.yml
  become: yes
  tags:
    - base_pkg_repos

- name: Update system
  import_tasks: apt_upgrade.yml
  become: yes
  tags:
    - base_update_system

- name: Install packages
  import_tasks: packages_install.yml
  become: yes
  tags:
    - base_pkg_install

- name: Set various settings in "/etc"
  import_tasks: settings.yml
  become: yes
  tags:
    - base_etc_settings

- name: Set timezone, locale and "timesyncd"
  import_tasks: time.yml
  become: yes
  tags:
    - base_timezone

- name: Create unique DH moduli
  import_tasks: moduli.yml
  become: yes
  tags:
    - base_moduli

- name: Configure UFW
  import_tasks: ufw.yml
  become: yes
  tags:
    - base_ufw
  when: not WSL1 and not WSL2

- name: Reconfigure dpkg
  import_tasks: dpkg_reconfigure.yml
  become: yes
  tags:
    - base_dpkg_reconfigure

- name: Configure sshguard
  import_tasks: sshguard.yml
  become: yes
  when: sshguard_install
  tags:
    - base_sshguard

- name: Configure logrotate
  import_tasks: logrotate.yml
  become: yes
  tags:
    - base_logrotate

- name: Configure Knot-resolver
  import_tasks: packages_resolver.yml
  become: yes
  tags:
    - base_knot
  when: not WSL1 and not WSL2

- name: Check if reboot is required
  stat:
    path: /var/run/reboot-required
  register: reboot_required

- name: Run all relevant handlers
  meta: flush_handlers

- name: Reboot if system can't pick-up updated kernel and/or userland without it
  debug:
    msg: "Rebooting {{ ansible_hostname | upper }} @ {{ ansible_host }}"
  notify:
    - reboot host
  when: reboot_required.results | json_query( '[*].stat.exists' ) | string == "[True]"

